name: Singularity Build
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libssl-dev \
          uuid-dev \
          libgpgme11-dev \
          squashfs-tools \
          libseccomp-dev \
          pkg-config

      - name: Install Singularity
        env:
          SINGULARITY_VERSION: 3.5.0
        run: |
          export GOPATH=/tmp/go
          mkdir -p $GOPATH
          sudo mkdir -p /usr/local/var/singularity/mnt && \
          mkdir -p $GOPATH/src/github.com/sylabs && \
          cd $GOPATH/src/github.com/sylabs && \
          wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-${SINGULARITY_VERSION}.tar.gz | \
          tar xzv && \
          cd singularity && \
          ./mconfig -p /usr/local && \
          make -C builddir && \
          sudo make -C builddir install          

      - name: Check out code for the container build
        uses: actions/checkout@v1

      - name: Build Container
        env:
          SINGULARITY_RECIPE: Singularity.def
          OUTPUT_CONTAINER: container.sif
        run: |
          ls 
          if [ -f "${SINGULARITY_RECIPE}" ]; then
            sudo -E singularity version
            sudo -E singularity help
            sudo -E singularity build ${OUTPUT_CONTAINER} ${SINGULARITY_RECIPE}
            echo "Present working directory: $PWD"
            ls
            sudo -E singularity run ${OUTPUT_CONTAINER}
          else
            echo "${SINGULARITY_RECIPE} is not found."
            echo "Present working directory: $PWD"
            ls
          fi

      - name: Upload artifact
        env:
          OUTPUT_CONTAINER: container.sif
        uses: actions/upload-artifact@v1
        with:
          # Artifact name
          name: ${OUTPUT_CONTAINER} # optional
          # Destination path
          # path: $PWD # optional
          # artifact source
          #source: # optional, default is current
